cmake_minimum_required(VERSION 3.21)

include_guard()

set(LLVM_PATH $ENV{LLVM_PATH} CACHE PATH "LLVM root path")
set(TARGET_ARCHITECTURE $ENV{TARGET_ARCHITECTURE} CACHE PATH "Target architecture")

if(NOT (DEFINED ${CMAKE_CROSSCOMPILING} AND ${CMAKE_CROSSCOMPILING}))
	if (NOT DEFINED ${CMAKE_SYSTEM_PROCESSOR})
		set(CMAKE_SYSTEM_PROCESSOR ${CMAKE_HOST_SYSTEM_PROCESSOR})
	endif()
	if (NOT DEFINED ${CMAKE_SYSTEM_NAME})
		set(CMAKE_SYSTEM_NAME ${CMAKE_HOST_SYSTEM_NAME})
	endif()
	if (NOT DEFINED ${CMAKE_SYSTEM_VERSION})
		set(CMAKE_SYSTEM_VERSION ${CMAKE_HOST_SYSTEM_VERSION})
	endif()
endif()

if(CMAKE_SYSTEM_NAME MATCHES "Windows")
	set(CMAKE_EXECUTABLE_SUFFIX ".exe")
else()
	set(CMAKE_EXECUTABLE_SUFFIX "")
endif()

set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES "CMAKE_SYSTEM_PROCESSOR;CMAKE_SYSTEM_NAME;CMAKE_SYSTEM_VERSION")

set(CMAKE_C_COMPILER ${LLVM_PATH}/bin/clang${CMAKE_EXECUTABLE_SUFFIX})
set(CMAKE_C_COMPILER_ID "Clang")
set(CMAKE_C_COMPILER_FRONTEND_VARIANT "GNU")

set(CMAKE_CXX_COMPILER ${LLVM_PATH}/bin/clang++${CMAKE_EXECUTABLE_SUFFIX})
set(CMAKE_CXX_COMPILER_ID "Clang")
set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "GNU")

set(CMAKE_RC_COMPILER ${LLVM_PATH}/bin/llvm-rc${CMAKE_EXECUTABLE_SUFFIX})

set(CMAKE_C_STANDARD 23)
set(CMAKE_CXX_STANDARD 23)

set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_C_EXTENSIONS OFF)
set(CMAKE_CXX_EXTENSIONS OFF)

set(CMAKE_C_EXCEPTIONS OFF)
set(CMAKE_CXX_EXCEPTIONS OFF)

set(CMAKE_C_RTTI OFF)
set(CMAKE_CXX_RTTI OFF)

set(CMAKE_VISIBILITY_INLINES_HIDDEN ON)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

set(CLANG_COMMON_FLAGS "-march=native")
if(CMAKE_SYSTEM_NAME MATCHES "Windows")
	set(CLANG_COMMON_FLAGS "${CLANG_COMMON_FLAGS} -gcodeview -Xclang -cfguard")
elseif(CMAKE_SYSTEM_NAME MATCHES "Darwin")
	set(CLANG_COMMON_FLAGS "${CLANG_COMMON_FLAGS} -fpic -fno-plt")
elseif(CMAKE_SYSTEM_NAME MATCHES "Linux")
	set(CLANG_COMMON_FLAGS "${CLANG_COMMON_FLAGS} -isystem /usr/include/${TARGET_ARCHITECTURE}-linux-gnu -fpic -fno-plt")
endif()
set(CMAKE_C_FLAGS "${CLANG_COMMON_FLAGS}")
set(CMAKE_CXX_FLAGS "${CLANG_COMMON_FLAGS} -stdlib=libc++")
set(CMAKE_EXE_LINKER_FLAGS "-fuse-ld=lld -L ${LLVM_PATH}/lib -L ${LLVM_PATH}/lib/c++ -Wl,-rpath,${LLVM_PATH}/lib -Wl,-rpath,${LLVM_PATH}/lib/c++ -lc++ -lc++abi")

#set(CMAKE_VERBOSE_MAKEFILE ON)

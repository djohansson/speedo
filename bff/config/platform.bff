#once

#if exists(TARGET_ARCHITECTURE)
	#import TARGET_ARCHITECTURE
	.ArchitectureName = '$TARGET_ARCHITECTURE$'
#else
	Error('TARGET_ARCHITECTURE not set')
#endif

#if exists(PROCESSOR_ARCHITECTURE)
	#import PROCESSOR_ARCHITECTURE
	.ProcessorArchitecture = '$PROCESSOR_ARCHITECTURE$'
#else
	Error('PROCESSOR_ARCHITECTURE not set')
#endif

#if exists(TARGET_OS)
	#import TARGET_OS
	.OSName = '$TARGET_OS$'
#else
	Error('TARGET_OS not set')
#endif

#if __WINDOWS__
.LibPrefix = ''
.LibSuffix = '.lib'
.DllPrefix = ''
.DllSuffix = '.dll'
.ExeSuffix = '.exe'

#if exists(VISUAL_STUDIO_PATH)
	#import VISUAL_STUDIO_PATH
	.VisualStudioPath = '$VISUAL_STUDIO_PATH$'
#else
	Error('VISUAL_STUDIO_PATH not set')
#endif

#if exists(VISUAL_STUDIO_VCTOOLS_VERSION)
	#import VISUAL_STUDIO_VCTOOLS_VERSION
	.VCToolchainVersion = '$VISUAL_STUDIO_VCTOOLS_VERSION$'
#else
	Error('VISUAL_STUDIO_VCTOOLS_VERSION not set')
#endif

.VCToolchainPath = '$VisualStudioPath$/VC/Tools/MSVC/$VCToolchainVersion$'

#if exists(WINDOWS_SDK)
	#import WINDOWS_SDK
	.WindowsSDKPath = '$WINDOWS_SDK$'
#else
	Error('WINDOWS_SDK not set')
#endif

#if exists(WINDOWS_SDK_VERSION)
	#import WINDOWS_SDK_VERSION
	.WindowsSDKVersion = '$WINDOWS_SDK_VERSION$'
#else
	Error('WINDOWS_SDK_VERSION not set')
#endif

.WindowsLibPath = '$WindowsSDKPath$/Lib/$WindowsSDKVersion$/um/x64'
.WindowsIncludePath = '$WindowsSDKPath$/Include/$WindowsSDKVersion$/um'
.WindowsUcrtLibPath = '$WindowsSDKPath$/Lib/$WindowsSDKVersion$/ucrt/x64'
.WindowsUcrtIncludePath = '$WindowsSDKPath$/Include/$WindowsSDKVersion$/ucrt'
.WindowsSharedIncludePath = '$WindowsSDKPath$/Include/$WindowsSDKVersion$/shared'
.VisualStudioIncludePath = '$VCToolchainPath$/include'
.VisualStudioLibPath = '$VCToolchainPath$/lib/x64'
.VisualStudioBinPath = '$VCToolchainPath$/bin/Hostx64/x64'

Settings
{
	#import TMP
	#import windir
	.Environment =
	{
		'TMP=$TMP$',
		'SystemRoot=$windir$'
	}
	.CachePath = '$TMP$/.fbuild.cache'
}
.PlatformIncludePaths = ' -isystem "$VisualStudioIncludePath$"'
	+ ' -isystem "$WindowsIncludePath$"'
	+ ' -isystem "$WindowsUcrtIncludePath$"'
	+ ' -isystem "$WindowsSharedIncludePath$"'
.PlatformLibPaths = ' -L"$VisualStudioLibPath$"'
#endif //__WINDOWS__
#if __OSX__
.LibPrefix = 'lib'
.LibSuffix = '.a'
.DllPrefix = 'lib'
.DllSuffix = '.dylib'
.ExeSuffix = ''
Settings
{
	.CachePath = "/tmp/.fbuild.cache"
}
#if exists(MACOS_SDK_PATH)
	#import MACOS_SDK_PATH
	.MacOSSDKPath = '$MACOS_SDK_PATH$'
#else
	Error('MACOS_SDK_PATH not set')
#endif
.PlatformIncludePaths = ' -isysroot $MacOSSDKPath$'
	+ ' -isystem $MacOSSDKPath$/usr/include'
.PlatformLibPaths = ''
#endif //__OSX__
#if __LINUX__
.LibPrefix = 'lib'
.LibSuffix = '.a'
.DllPrefix = 'lib'
.DllSuffix = '.so'
.ExeSuffix = ''
Settings
{
	.CachePath = "/tmp/.fbuild.cache"
}
.PlatformIncludePaths = ' -isystem /usr/include/$ProcessorArchitecture$-linux-gnu'
	+ ' -I /usr/include'
.PlatformLibPaths = ''
#endif //__LINUX__

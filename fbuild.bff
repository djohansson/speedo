#include "clang-config.bff"
#include "vulkan-config.bff"

.ProjectName = 'slang'
.ProjectPath = '$_WORKING_DIR_$'
.IntermediateFilePath = '$ProjectPath$/build.intermediate'
.BuildOutputPath = '$ProjectPath$/build.output'

.AllConfigNames = { }

ForEach(.Config in .Clang_x64_Configs)
{
	Using(.Config)

	^AllConfigNames + '$ConfigName$'

	.IntermediateFilePath + '/$ConfigName$'
	.CompilerOptions + .CompilerOptionsCpp
			+ ' -I$ProjectPath$'
			+ ' -I$ProjectPath$/source'
			+ ' -I$ProjectPath$/tools'
			+ ' -I$ProjectPath$/external'
			+ ' -I$ProjectPath$/external/dxc'
			+ ' -I$ProjectPath$/external/glm'
			+ ' -I$ProjectPath$/external/glslang'
			+ ' -I$ProjectPath$/external/stb'
			+ ' -I$ProjectPath$/external/tinyobjloader'
			+ ' -I$ProjectPath$/external/imgui'
			+ ' -I$VulkanSDKPath$/include'
			+ ' -Wno-unused-variable'
			+ ' -Wno-unused-local-typedef'
			+ ' -DSLANG_STATIC'
	
	Library('$ConfigName$-core')
	{
		.IntermediateFilePath + '/core'
		.CompilerInputPath = '$ProjectPath$/source/core'
		.CompilerOutputPath = '$IntermediateFilePath$'
		.LibrarianOutput = '$BuildOutputPath$/$ConfigName$/core'
	#if __WINDOWS__
		.LibrarianOutput + '.lib'
	#endif //__WINDOWS__
	}

	Library('$ConfigName$-slang')
	{
		.IntermediateFilePath + '/slang'
		.CompilerInputPath = '$ProjectPath$/source/slang'
		.CompilerOutputPath = '$IntermediateFilePath$'
		.LibrarianOutput = '$BuildOutputPath$/$ConfigName$/slang'
	#if __WINDOWS__
		.LibrarianOutput + '.lib'
	#endif //__WINDOWS__
	}

	ObjectList('$ConfigName$-slangc')
	{
		.IntermediateFilePath + '/slangc'
		.CompilerInputPath = '$ProjectPath$/source/slangc'
		.CompilerOutputPath = '$IntermediateFilePath$'
	}

	Executable('$ConfigName$-slangc-exe')
	{
		.IntermediateFilePath + '/slangc'
		.Libraries = {
			'$ConfigName$-core',
			'$ConfigName$-slang',
			'$ConfigName$-slangc',
		}
		.LinkerOutput = '$BuildOutputPath$/$ConfigName$/slangc'
	#if __WINDOWS__
		.LinkerOutput + '.exe'
	#endif //__WINDOWS__
	}

	Library('$ConfigName$-gfx')
	{
		.IntermediateFilePath + '/gfx'
		.CompilerOptions + ' -DSLANG_STATIC'
		.CompilerInputPath = '$ProjectPath$/tools/gfx'
		.CompilerOutputPath = '$IntermediateFilePath$'
		.LibrarianOutput = '$BuildOutputPath$/$ConfigName$/gfx'
	#if __WINDOWS__
		.LibrarianOutput + '.lib'
	#endif //__WINDOWS__
	}

	ObjectList('$ConfigName$-hello-world')
	{
		.IntermediateFilePath + '/hello-world'
		.CompilerInputPath = '$ProjectPath$/examples/hello-world'
		.CompilerOutputPath = '$IntermediateFilePath$'
	}

	Executable('$ConfigName$-hello-world-exe')
	{
		.IntermediateFilePath + '/hello-world'
		.Libraries = {
			'$ConfigName$-core',
			'$ConfigName$-gfx',
			'$ConfigName$-slang',
			'$ConfigName$-hello-world',
		}
		.LinkerOutput = '$BuildOutputPath$/$ConfigName$/hello-world'
	#if __WINDOWS__
		.LinkerOutput + '.exe'
		.LinkerOptions + ' -luser32'
	#endif //__WINDOWS__
	}

	ObjectList('$ConfigName$-model-viewer')
	{
		.IntermediateFilePath + '/model-viewer'
		.CompilerInputPath = '$ProjectPath$/examples/model-viewer'
		.CompilerOutputPath = '$IntermediateFilePath$'
	}

	Executable('$ConfigName$-model-viewer-exe')
	{
		.IntermediateFilePath + '/model-viewer'
		.Libraries = {
			'$ConfigName$-core',
			'$ConfigName$-gfx',
			'$ConfigName$-slang',
			'$ConfigName$-model-viewer',
		}
		.LinkerOutput = '$BuildOutputPath$/$ConfigName$/model-viewer'
	#if __WINDOWS__
		.LinkerOutput + '.exe'
	#endif //__WINDOWS__
	}

	Alias('$ConfigName$')
	{
		.Targets =
		{
			'$ConfigName$-slangc-exe',
			'$ConfigName$-hello-world-exe',
			'$ConfigName$-model-viewer-exe',
		}
	}
}

Alias('all')
{
	.Targets = .AllConfigNames
}
